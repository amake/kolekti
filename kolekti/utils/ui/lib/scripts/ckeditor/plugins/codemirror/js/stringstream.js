var stringStream=function(b){var c='',d=0,e='';function f(){while(d==c.length){e+=c;c='';d=0;try{c=b.next();}catch(g){if(g!=StopIteration)throw g;else return false;}}return true;};return{peek:function(){if(!f())return null;return c.charAt(d);},next:function(){if(!f())if(e.length>0)throw "End of stringstream reached without emptying buffer ('"+e+"').";else throw StopIteration;return c.charAt(d++);},get:function(){var g=e;e='';if(d>0){g+=c.slice(0,d);c=c.slice(d);d=0;}return g;},push:function(g){c=c.slice(0,d)+g+c.slice(d);},lookAhead:function(g,h,i,j){function k(q){return j?q.toLowerCase():q;};g=k(g);var l=false,m=e,n=d;if(i)this.nextWhileMatches(/[\s\u00a0]/);for(;;){var o=d+g.length,p=c.length-d;if(o<=c.length){l=g==k(c.slice(d,o));d=o;break;}else if(g.slice(0,p)==k(c.slice(d))){e+=c;c='';try{c=b.next();}catch(q){if(q!=StopIteration)throw q;break;}d=0;g=g.slice(p);}else break;}if(!(l&&h)){c=e.slice(m.length)+c;d=n;e=m;}return l;},lookAheadRegex:function(g,h){if(g.source.charAt(0)!='^')throw new Error('Regexps passed to lookAheadRegex must start with ^');while(c.indexOf('\n',d)==-1)try{c+=b.next();}catch(j){if(j!=StopIteration)throw j;break;}var i=c.slice(d).match(g);if(i&&h)d+=i[0].length;return i;},more:function(){return this.peek()!==null;},applies:function(g){var h=this.peek();return h!==null&&g(h);},nextWhile:function(g){var h;while((h=this.peek())!==null&&g(h))this.next();},matches:function(g){var h=this.peek();return h!==null&&g.test(h);},nextWhileMatches:function(g){var h;while((h=this.peek())!==null&&g.test(h))this.next();},equals:function(g){return g===this.peek();},endOfLine:function(){var g=this.peek();return g==null||g=='\n';}};};
